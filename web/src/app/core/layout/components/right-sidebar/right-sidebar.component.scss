@import 'variables';
@import 'mixins';
@import '~bootstrap/scss/functions';
@import '~bootstrap/scss/variables';
@import '~bootstrap/scss/mixins/breakpoints';

:host {
  display: block;
  position: fixed;
  top: app-size(header, height, true);
  right: 0;
  bottom: 0;
  min-width: 100%;
  @include getZ-Index(right-sidebar);
  transition: right $transition;

  &.minimized {
    right: -100%;
  }

  @include media-breakpoint-up(md) {
    min-width: app-size(sidebar, width, true);
    flex-basis: app-size(sidebar, width, true);
  }

  @include media-breakpoint-up(lg) {
    position: sticky;
    top: 0;
    margin-right: 0;
    min-width: app-size(sidebar, width, true);
    flex-basis: app-size(sidebar, width, true);
    transition: right $transition, margin-right $transition;

    &.minimized {
      margin-right: -(app-size(sidebar, width, true));
    }
  }

  .right-sidebar {
    @include set-bgcolor('background', false);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    width: 100%;
    max-width: 100%;
    @include media-breakpoint-up(md) {
      max-width: app-size(sidebar, width, true);
      border-left: 1px solid $gray-300;
    }

    &-content {
      width: 100%;
      overflow-y: auto;
      overflow-x: hidden;
    }

    &-buttons {
      display: flex;
      flex-direction: row;
      align-items: center;
      width: 100%;
      height: fit-content;
      padding: 0.8em 0;
      background-color: transparent;

      .btn-sidebar-toggle {
        position: relative;
        left: 1em;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 7px 13px;
        border: 1px solid $gray-200;
        border-radius: 20px;
        @include set-bgcolor('light', false);
        cursor: pointer;
        transition: left $transition, padding $transition, border-color $transition, background-color $transition;

        @media (hover: hover) and (any-pointer: fine) {
          &:hover {
            @include set-bgcolor('primary', false);
            @include set-bordercolor('primary', false);
            padding-left: 1.25em;

            > .btn-icon {
              @include set-textcolor('background');
            }
          }
        }

        .btn-icon {
          font-size: 0.85em;
          color: $gray-600;
          transition: color $transition, transform $transition;
        }
      }
    }
  }

  &.minimized {
    .right-sidebar {
      &-buttons {
        .btn-sidebar-toggle {
          position: fixed;
          left: unset;
          right: -1.8em;
          padding-right: 2.4em;
          @include set-bordercolor('primary', false);
          @include set-bgcolor('primary', false);

          > .btn-icon {
            transform: rotate(180deg);
            @include set-textcolor('background', false);
          }

          @include media-breakpoint-up(lg) {
            position: relative;
            left: -2.4em;

            @media (hover: hover) and (any-pointer: fine) {
              &:hover {
                padding-left: 0.8125em;
                left: -2.9em;
              }
            }
          }
        }
      }
    }
  }
}
