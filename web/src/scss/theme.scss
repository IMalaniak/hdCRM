@use '~@angular/material' as mat;
@use '~@angular/material/core/theming/palette' as palette;
@import 'theme-variables.scss';

//RESET MATERIAL VARIABLES:
// Background palette for light themes.
mat.$light-theme-background-palette: (
  status-bar: map_get(mat.$grey-palette, 300),
  app-bar: map_get(mat.$grey-palette, 100),
  background: map_get(mat.$grey-palette, 50),
  hover: rgba(black, 0.04),
  card: app-color('theme', 'light', true),
  dialog: app-color('theme', 'background', true),
  disabled-button: rgba(black, 0.12),
  raised-button: app-color('theme', 'light', true),
  focused-button: palette.$dark-focused,
  selected-button: map_get(mat.$grey-palette, 300),
  selected-disabled-button: map_get(mat.$grey-palette, 400),
  disabled-button-toggle: map_get(mat.$grey-palette, 200),
  unselected-chip: map_get(mat.$grey-palette, 300),
  disabled-list-option: map_get(mat.$grey-palette, 200),
  tooltip: map_get(mat.$grey-palette, 700)
);

// // Background palette for dark themes.
mat.$dark-theme-background-palette: (
  status-bar: black,
  app-bar: map_get(mat.$grey-palette, 900),
  background: #303030,
  hover: rgba(white, 0.04),
  card: app-color('theme-dark', 'light', true),
  dialog: app-color('theme-dark', 'background', true),
  disabled-button: rgba(white, 0.12),
  raised-button: map-get(mat.$grey-palette, 800),
  focused-button: rgba(white, 0.12),
  selected-button: map_get(mat.$grey-palette, 900),
  selected-disabled-button: app-color('theme-dark', 'light', true),
  disabled-button-toggle: black,
  unselected-chip: map_get(mat.$grey-palette, 700),
  disabled-list-option: black,
  tooltip: map_get(mat.$grey-palette, 700)
);

// // Foreground palette for light themes.
mat.$light-theme-foreground-palette: (
  base: app-color('theme', 'text', true),
  divider: palette.$dark-dividers,
  dividers: palette.$dark-dividers,
  disabled: palette.$dark-disabled-text,
  disabled-button: rgba(black, 0.26),
  disabled-text: palette.$dark-disabled-text,
  elevation: black,
  hint-text: palette.$dark-disabled-text,
  secondary-text: palette.$dark-secondary-text,
  icon: app-color('theme', 'text', true),
  icons: app-color('theme', 'text', true),
  text: app-color('theme', 'text', true),
  slider-min: rgba(black, 0.87),
  slider-off: rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38)
);

// // Foreground palette for dark themes.
mat.$dark-theme-foreground-palette: (
  base: app-color('theme-dark', 'text', true),
  divider: palette.$light-dividers,
  dividers: palette.$light-dividers,
  disabled: palette.$light-disabled-text,
  disabled-button: rgba(white, 0.3),
  disabled-text: palette.$light-disabled-text,
  elevation: black,
  hint-text: palette.$light-disabled-text,
  secondary-text: palette.$light-secondary-text,
  icon: app-color('theme-dark', 'text', true),
  icons: app-color('theme-dark', 'text', true),
  text: app-color('theme-dark', 'text', true),
  slider-min: white,
  slider-off: rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3)
);

// Define the standart theme
$theme-primary: mat.define-palette($default-primary-palette, $default-primary-palette-shade);
$theme-accent: mat.define-palette($default-accent-palette, $default-accent-palette-shade);
$theme-warn: mat.define-palette($default-warn-palette, $default-warn-palette-shade);
$theme: mat.define-light-theme($theme-primary, $theme-accent, $theme-warn);

// Define an alternate dark theme
$theme-dark-primary: mat.define-palette($dark-primary-palette, $dark-primary-palette-shade);
$theme-dark-accent: mat.define-palette($dark-accent-palette, $dark-accent-palette-shade);
$theme-dark-warn: mat.define-palette($dark-warn-palette, $dark-warn-palette-shade);
$dark-theme: mat.define-dark-theme($theme-dark-primary, $theme-dark-accent, $theme-dark-warn);

// Define typography
$general-typography: mat.define-typography-config(
  $font-family: $font-family
);

@include mat.core($general-typography);
@include mat.all-component-themes($theme);

.dark-theme {
  @include mat.all-component-themes($dark-theme);
}
